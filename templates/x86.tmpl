<%page args="kernels, runtime_img, runtime_base, basearch, inroot, outroot, product, isolabel"/>
<%
configdir="tmp/config_files/x86"
PXEBOOTDIR="images/pxeboot"
STAGE2IMG="images/install.img"
GRUB2DIR="boot/grub2"
KERNELDIR=PXEBOOTDIR
LORAXDIR="usr/share/lorax/"

## Don't allow spaces or escape characters in the iso label
def valid_label(ch):
    return ch.isalnum() or ch == '_'

isolabel = ''.join(ch if valid_label(ch) else '-' for ch in isolabel)

import os
from os.path import basename
from pylorax.sysutils import joinpaths

# Test the runtime_img, if it is > 4GiB we need to set -iso-level to 3
if os.stat(joinpaths(inroot, runtime_img)).st_size >= 4*1024**3:
    isoargs = "-iso-level 3"
else:
    isoargs = ""
%>

mkdir images
install ${runtime_img} ${STAGE2IMG}
treeinfo stage2 mainimage images/${runtime_base}

## install kernels
mkdir ${KERNELDIR}
install boot/xen*gz ${KERNELDIR}/xen.gz
<%
sortedkernels = sorted(kernels, key=lambda k: LooseVersion(k['version']))
latestkernel = sortedkernels[-1]
shortkvers = []
%>

mkdir ${EXTRAKERNELS}
# bypass "chroot" enforced by Lorax parser
-install ../../../../yum/dom0-updates/rpm/kernel-qubes-vm-[0-9]*rpm ${EXTRAKERNELS}
-remove ${EXTRAKERNELS}/kernel-qubes-vm-${latestkernel.version}.rpm

%for kernel in sortedkernels:
    # Use short kernel version because of ISO9660 filename length limitation
    <%
    shortkver = kernel.version.replace('.pvops.qubes','').replace('.x86_64','')
    shortkvers.append(shortkver)
    %>
    %if kernel.flavor:
        ## i386 PAE
        installkernel images-xen ${kernel.path} ${KERNELDIR}/vmlinuz-${kernel.flavor}
        installinitrd images-xen ${kernel.initrd.path} ${KERNELDIR}/initrd-${kernel.flavor}.img
    %else:
        ## normal i386, x86_64
        installkernel images-${basearch} ${kernel.path} ${KERNELDIR}/vmlinuz
        installinitrd images-${basearch} ${kernel.initrd.path} ${KERNELDIR}/initrd.img
    %endif
    installkernel images-alt-${shortkver} ${kernel.path} ${BOOTDIR}/vmlinuz-${shortkver}
    installinitrd images-alt-${shortkver} ${kernel.initrd.path} ${BOOTDIR}/initrd-${shortkver}.img

  <% latestkver = kernel.version %>

%endfor

## configure bootloader
replace @VERSION@ ${product.version} ${BOOTDIR}/grub.conf ${BOOTDIR}/isolinux.cfg ${BOOTDIR}/*.msg
replace @PRODUCT@ '${product.name}'  ${BOOTDIR}/grub.conf ${BOOTDIR}/isolinux.cfg ${BOOTDIR}/*.msg
replace @ROOT@ 'inst.stage2=hd:LABEL=${isolabel|udev}' ${BOOTDIR}/isolinux.cfg
replace @EXTRAKERNELS@ '' ${BOOTDIR}/isolinux.cfg

hardlink ${KERNELDIR}/xen.gz ${BOOTDIR}
hardlink ${KERNELDIR}/vmlinuz ${BOOTDIR}
hardlink ${KERNELDIR}/initrd.img ${BOOTDIR}
%if basearch == 'x86_64':
    treeinfo images-xen kernel ${KERNELDIR}/vmlinuz
    treeinfo images-xen initrd ${KERNELDIR}/initrd.img
%endif


## configure grub2 config file
mkdir ${GRUB2DIR}
install ${configdir}/grub2-bios.cfg ${GRUB2DIR}/grub.cfg
replace @VERSION@ ${product.version} ${GRUB2DIR}/grub.cfg
replace @PRODUCT@ '${product.name}'  ${GRUB2DIR}/grub.cfg
replace @KERNELPATH@ /${KERNELDIR}/vmlinuz ${GRUB2DIR}/grub.cfg
replace @INITRDPATH@ /${KERNELDIR}/initrd.img ${GRUB2DIR}/grub.cfg
replace @ISOLABEL@ '${isolabel}' ${GRUB2DIR}/grub.cfg
replace @ROOT@ 'inst.stage2=hd:LABEL=${isolabel|udev}' ${GRUB2DIR}/grub.cfg


## WHeeeeeeee, EFI.
<% efiarch32=None; efiarch64=None %>
%if exists("boot/efi/EFI/*/gcdia32.efi"):
    <% efiarch32 = 'IA32' %>
%endif
%if exists("boot/efi/EFI/*/gcdx64.efi"):
    <% efiarch64 = 'X64' %>
%endif
%if (efiarch32 or efiarch64) and basearch != 'i386':
    <%include file="efi.tmpl" args="configdir=configdir, KERNELDIR=KERNELDIR, efiarch32=efiarch32, efiarch64=efiarch64, isolabel=isolabel"/>
%endif


# Support for productmd format
# https://release-engineering.github.io/productmd/treeinfo-1.0.html
# https://pagure.io/pungi/c/682f959ee01afef47a6f097e99e31ce204dc04ce

# Set/modify 'general' section
<%
import os
import time

if 'SOURCE_DATE_EPOCH' in os.environ:
    timestamp = os.environ['SOURCE_DATE_EPOCH']
else:
    timestamp = str(time.time())

timestamp = int(float(timestamp))

images = ['xen'] + ['alt-' + shortkver for shortkver in shortkvers] + [basearch]
platforms = ','.join(images)
%>
treeinfo general variant ${product.name}
treeinfo general timestamp ${timestamp}
treeinfo general packagedir Packages
treeinfo general repository .
treeinfo general platforms ${platforms}

# Add 'header' section
treeinfo header version 1.0

# Add 'release' section
treeinfo release name ${product.name}
treeinfo release short ${product.name}
treeinfo release version ${product.version}

# Add 'tree' section
treeinfo tree arch ${basearch}
treeinfo tree build_timestamp ${timestamp}
treeinfo tree platforms ${platforms}
treeinfo tree variants ${product.name}

# Add 'variant-VARIANTNAME' section
treeinfo "variant-${product.name}" id ${product.name}
treeinfo "variant-${product.name}" name ${product.name}
treeinfo "variant-${product.name}" packages Packages
treeinfo "variant-${product.name}" repository .
treeinfo "variant-${product.name}" type variant
treeinfo "variant-${product.name}" uid ${product.name}
